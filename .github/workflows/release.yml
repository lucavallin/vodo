name: Build and Release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  release:
    strategy:
      matrix:
        runs_on: [ubuntu-latest, windows-latest, macos-latest, macos-arm64]
        include:
          - env:
              ARCH_TAG: linux
          - env:
              ARCH_TAG: windows
              BIN_SUFFIX: .exe
          - env:
              ARCH_TAG: macos
          - env:
              ARCH_TAG: macos-arm
    runs-on: ${{ matrix.runs_on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build release
        run: >-
          cargo build --release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          tag_name: '${{ github.ref }}'
          release_name: 'Release ${{ github.ref }}'
          draft: false
          prerelease: false
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          upload_url: '${{ steps.create_release.outputs.upload_url }}'
          asset_path: ./target/release/${{ github.repository.name }}${{ env.BIN_SUFFIX }}}
          asset_name: ${{ github.repository.name }}-${{ env.ARCH_TAG }}
          asset_content_type: application/octet-stream
